az vm list-sizes --location eastus --query "[?name=='Standard_NV32as_v4'].{name:name, maxDataDiskCount:maxDataDiskCount, memoryInMb:memoryInMb, numberOfCores:numberOfCores, osDiskSizeInMb:osDiskSizeInMb, resourceDiskSizeInMb:resourceDiskSizeInMb}"


az vm list --query "[?name=='REPOCLINET_APP01'].{name:name,id:id}"


az vm list --query "[?contains(name, 'REPOCLINET_APP01')].{name:name,id:id}"


az vm list --query "[?contains(name, 'REPOCLINET')].{name:name,id:id}"


az vm list-ip-addresses -g RG -n VMNAME --query [].virtualMachine.network.privateIpAddresses[0]

# az vm list -g PATCHTEST-RG --query [].[name]
# az vm list -g PATCHTEST-RG --query [].[name][]
# az vm list -g PATCHTEST-RG  --query [].[name,storageProfile.osDisk.name]
# az vm list -g PATCHTEST-RG  --query [].[name,storageProfile.osDisk.name][]
# To List Linux Server in RG
# az vm list -g PATCHTEST-RG --query "[?storageProfile.osDisk.osType=='Linux'].{Name:name}"

# To List Win Server in RG
# az vm list -g PATCHTEST-RG --query "[?storageProfile.osDisk.osType=='Windows'].{Name:name}"
[
  {
    "Name": "PatchTestSrv"
  }
]

# az vm list -g PATCHTEST-RG --query "[?storageProfile.osDisk.osType=='Windows'].name"
[
  "PatchTestSrv"
]

#az rest --method get --url https://management.azure.com/subscriptions/SUBSCRIPTION_ID_HERE/providers/Microsoft.Network/publicIPAddresses?api-version=2020-05-01 --query "value|[*].properties.ipAddress"



TARGET TO DELETE ALL SNAPSHOT CONTAINING TEXT arnot-snap
GOOD TO RUN FOR LOOP
az snapshot list --query "[?contains(name, 'arnot-snap')]".id ---> GIVES ARRAY OF IDS.

GOOD TO BUILD QUERY like this
az snapshot list --query "[?contains(name, 'arnot-snap')]".{id:id} ---> Gives ARRAY containing json objects.
az snapshot revoke-access --ids $(az snapshot list --query "[?contains(name, 'arnot-snap')]".{id:id})





UNIX QUERY
# grep -i "\.OUT" -> means show me all files which contain .out or .OUT 
# awk mean print name of file 
# tr means translate , -d for delete . Now delete .OUT or .out from filename output.
# now translate newline with "|"  . So i can use this and input to egrep command

ls -ltr | grep -i  "\.OUT"|awk '{print $9}' | tr -d  "\.OUT,\.out"  | tr "\n" "|"
BEFORE:
-----
-rw-r--r--. 1 root     root       118911 Jan 27 15:43 AGAZRUSEPBI40.OUT
-rw-r--r--. 1 root     root       116345 Jan 27 16:24 AGAZRUSEPBI41.OUT
-rw-r--r--. 1 root     root       177965 Jan 27 17:44 AGAZRUSEPBI51.OUT
-rw-r--r--. 1 root     root       148017 Jan 27 18:35 AGAZRUSEPBI50.OUT
-rw-r--r--. 1 root     root        52447 Jan 27 19:24 AGAZRUSEPBI60.OUT
-rw-r--r--. 1 root     root       114066 Jan 27 19:59 AGAZRUSEPBI61.OUT
-rw-r--r--. 1 root     root       116373 Jan 27 20:51 AGAZRUSEPBI70.out
-rw-r--r--. 1 root     root       589733 Jan 27 22:21 AGAZRUSEPORA03.out
-rw-r--r--. 1 root     root       847143 Jan 28 10:04 AGDC1PXINF01.OUT
AFTER:
----
AGAZRSEPBI40|AGAZRSEPBI41|AGAZRSEPBI51|AGAZRSEPBI50|AGAZRSEPBI60|AGAZRSEPBI61|AGAZRSEPBI70|AGAZRSEPRA03|AGDC1PXINF01|[root
